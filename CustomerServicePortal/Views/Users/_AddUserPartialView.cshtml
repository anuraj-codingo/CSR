@model CustomerServicePortal.Models.UserRegModel
@{
    ViewBag.Title = "Index";
}
<style>



    .submit-btn {
        border: none;
        border-radius: 5px;
        padding: 10px 30px;
        width: auto;
        cursor: pointer;
        background: #607D8B;
        color: #fff;
        font-size: 15px;
        letter-spacing: 0.5px;
    }



    .form-box .submit-btn {
        border-radius: 0px;
        background: #404565;
        font-size: 14px;
        letter-spacing: 2px;
        text-transform: uppercase;
        font-weight: 300;
    }
</style>


@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>*@

@*<div class="page-content-main gradiant-bg m-0">*@
@*<div class="page-content">*@
<div class="row m-0">
    <div class="form-box">
        @using (Ajax.BeginForm("AddUser", "Users",
        new AjaxOptions
        {

            OnSuccess = "OnSuccess",
            OnFailure = "OnFailure",
            LoadingElementId = "progress"
        }, new { @id = "Adduser" }))
        {
            @*<form class="login100-form validate-form p-b-33 p-t-5" action="@Url.Action("AddUser","Users")" method="post">*@
            <div class="form-content text-left">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Firstname</label>
                            @Html.HiddenFor(model => model.ID)
                            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control Required", @placeholder = "First Name" })

                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Last name</label>
                            @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", @placeholder = "Last Name" })

                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Authentication Type</label>
                            @Html.DropDownListFor(model => model.AuthenticationType,
             new List<SelectListItem> {
                  new SelectListItem { Value = "Active_Directory" , Text = "Active Directory " },
                  new SelectListItem { Value = "Username_and_Password" , Text = "Username and Password" }
               }, "Select Authentication",
             new { @class = "form-control", @onchange = "AuthenticationTypes()" })
                            @Html.ValidationMessageFor(model => model.AuthenticationType, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Role</label>
                            @Html.DropDownListFor(model => model.Roles,
             new List<SelectListItem> {
                  new SelectListItem { Value = "Admin" , Text = "Admin" },
                  new SelectListItem { Value = "ABC_User" , Text = "ABC User" },
                  new SelectListItem { Value = "Fund_User" , Text = "Fund User" }
               }, "Select Role",
             new { @class = "form-control", @onchange = "RoleChange()" })
                            @Html.ValidationMessageFor(model => model.Roles, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>User name</label>
                            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @placeholder = "User Name" })

                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6 d-none EmailShowHide">
                        <div class="form-group">
                            <label>Email</label>
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = "Email" })

                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6 d-none mul">
                        <div class="form-group">
                            <label>Fund</label>
                            @Html.ListBoxFor(m => m.fundMultiple, Model.FundList, new { @class = "form-control multiselect", @style = "padding: 6px; width: 100%;", @multiple = "multiple" })


                            @Html.ValidationMessageFor(model => model.fundMultiple, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6 d-none sing">
                        <div class="form-group">
                            <label>Fund</label>
                            @Html.DropDownListFor(m => m.fundSingle, Model.FundList, new { @class = "form-control single", @style = "padding: 6px;", })


                            @Html.ValidationMessageFor(model => model.fundSingle, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>
                <div class="btn-form-submit" align="right">
                    <button onclick="SubmitAdduser()" class="btnSubmit submit-btn">Submit</button>
                </div>
            </div>
        }
        @*</form>*@
    </div>
</div>



<script>
       $(function () {
        AuthenticationTypes();
           RoleChange();
           if (@Model.ID> 0) {
               document.getElementById("UserName").readOnly = true;
           }
    });
    function FillEmail() {
        $('#Email').val($('#UserName').val());

    }
        function AuthenticationTypes() {
            if ($('#AuthenticationType').val() == "Active_Directory") {
                $('.EmailShowHide').addClass('d-none');
            }
            else if ($('#AuthenticationType').val() == "Username_and_Password") {
                $('.EmailShowHide').removeClass('d-none');
            }
            else {
                $('.EmailShowHide').addClass('d-none');
            }
    }
    function RoleChange() {
        if ($('#Roles').val() == "ABC_User" || $('#Roles').val() == "Admin") {
            $('.mul').removeClass('d-none');
            $('.sing').addClass('d-none');
        }
        else if ($('#Roles').val() == "Fund_User") {
            $('.mul').addClass('d-none');
            $('.sing').removeClass('d-none');
        }
        else {
            $('.mul').addClass('d-none');
            $('.sing').addClass('d-none');
        }

    }
  
    $(document).ready(function () {
        $(".multiselect").SumoSelect({ placeholder: 'Select From Multiple Choice', csvDispCount: 5, floatWidth: 3 });

    });
</script>